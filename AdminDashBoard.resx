<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox2.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAgAAAAIACAYAAAD0eNT6AAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAB2
        GwAAdhsB9YbelQAAABl0RVh0U29mdHdhcmUAd3d3Lmlua3NjYXBlLm9yZ5vuPBoAABt9SURBVHhe7d0J
        sL1nQd/xHxAS1rAmUiiLLFJBiq2Bsgi4FGuFgC0gDHRRbLGMWKxIKAbZhBakqEChRZCyCIORASoCZW1r
        tWwBsYBARyJrg0DYDEvIQueZ88bEJ0/+5/+/9z3POe9zPp+Z7wxDknvPfc+57/u79557bgIAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwiJOS3C3Jv0jylCTPTfLiJL+b5C1T
        5X+X/6/8s/Lv/HSS709y/fqNAQC757gkd05yepK3JjknybcPWXkbZST8UpI7Te8DANiyqyT5iSSvTfKX
        jQv43H01yWuS3H963wBAR+Ur/d9M8qXGRbpX5X0/f/rOAACwQeVn8+Xb+/XFeNv9YZJTk1yhvsEAwMHd
        J8mZjQvvrvXuJPeubzwAcGxunuT1jQvtrle+S3Hr+oMBAI6sPMHuCUm+0bi4LqWvJ/nlJCfUHxwAcFnf
        leT9jQvqUvtgktvWHyQAcIn7Jfly4yK69MqvDz64/mABYN9defq1vvrCOVr/yYsJAcDK1Rb6RL+D9uYk
        16gPAgDsk+tMv0NfXyRH713+1gAA++rkJB9qXBz3pfKxl2MAAHvjmgt5YZ9N957pWADA8I5P8qbGxXBf
        e7vXCgBgdOW18s9oXAT3vVf4OwIAjOwXGxc/rXpkfbAAYAR3THJe48KnVd+a/swxAAzj2knOalz09Nf7
        RJLr1gcPAJbqZY2Lndq9pD54ALBEd0tyUeNCp3blWP1gfRABYEnK697/n8ZFTkeu/AXB8vcRAGCRTmtc
        3HR0ld+YAIDFOTHJFxsXNh1d53iVQACW6LGNi5qOrUfXBxUAdln5E79/0big6dj6bJKr1gcXAHbVv25c
        zHSwHlEfXADYVR9oXMh0sMpvBADAzjulcRHT4fre+iADwK55VuMCpsP1zPogA8AuKS9e87nGBUyH6+zp
        RZUAYCfdvXHx0jz5S4EA7KwnNi5cmqfT64MNALvifzYuXJqnt9UHGwB2QXnxn282Llyap294USAAdlH5
        s7/1RUvzdtf6oAPAtv3LxgVL8/bQ+qADwLb9h8YFS/P29PqgA8C2va5xwdK8vbY+6ACwbR9tXLA0bx+u
        DzoAbNsXGxcszdvn64MOANv2rcYFS/NWfs0SAHbGCY2LlTbT8fXBB4BtuX7jQqXNdL364APAttyocaHS
        ZirHGgB2wnUaFyptpmvVBx8AtqX8rfr6QqX5uyjJleqDDwDbVP5YTX3B0rydWx90ANi2zzUuWJq3s+uD
        DgDb9seNC5bm7cz6oAPAtr2yccHSvL28PugAsG1PalywNG+Prw86AGzbgxsXLM3bA+uDDgDbdvvGBUvz
        drv6oAPAtl0xyRcaFy3NUzm25RgDwM55dePCpXk6oz7YALArfq5x4dI8Pbw+2ACwK27TuHBpnm5dH2wA
        2CUfaFy8dLjKMQWAnfZvGxcwHa5H1QcZAHZN+Xv1FzQuYjpYF07HFAB23lsaFzIdrDfVBxcAdtWpjQuZ
        DtaP1QcXAHbVFZK8t3Ex07FV/sJiOZYAsBjldevrC5qOrfvVBxUAdt2VknykcVHT0fUhL/0LwFL9aOPC
        pqPrXvXBBIAleU3j4qYj96r6IALA0tw4ybmNi5zafS3JzeqDCABL9OjGhU7tvOofAMMoT2YrL2hTX+z0
        13urJ/4BMJqTk3ymcdHTqrOT3KA+aAAwgnv4OwHNyjH5ofpgAcBIHtG4AO57/6o+SAAwol9pXAT3tSfW
        BwcARvacxsVw33p+fVAAYHTlpYJf2rgo7ksvno4BAOyd8pfunta4OI7es/y6HwAkj0xyYeNCOVoXJTmt
        /uABYJ/dP8mXGxfNUfpSkn9Uf9AAQHLTJO9oXDyX3plJblF/sADAJU5I8uzp2+X1hXRplR9r/EaS4+sP
        EgBoOyXJuxsX1aX0/iR3qT8oAGC946YnCH6lcYHd1crzGMpt9it+AHBIJyX5dzs+BMqF/ylJrl/feADg
        cK6d5JeTfL5xAd5W5bacnuRa9Y0FAOZVnih4apIzkpzXuChvuvLX+96S5J8luVp94wCAzSvfcn94ktdO
        v2tfX6zn6otJXjP95b7r1TcCANie8sS78tsD5dX2XpnkfUm+1riYr+vc6b8tb+PRSb7Pk/oAYFnK3xu4
        SZJ7JLlvkock+Zkkj5kq/7v8f+WflX+n/LsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABw
        ICcm+VtJ7prkPkl+KsnDph6jA3Xx8SvHshzTcmzLMb5mffABYNNunOTUJL+U5HeSnJnknCTfVte+kOQ9
        SV6Z5LFJ7pXkRvWdBQAHdaskj5guNJ9qXIi0W30iycuTPDzJzes7EwAuzxWT3D3Js5P8WeMCo2X1kSS/
        luQuSa5Q39kAcLskv5HkM42LiMaofHfgV6fnEQCwx06YnmD2jsbFQmP3B0kekuT4+kEBwLiul+RxST7b
        uDBov/p0ktOSXLt+kAAwjvLrY+XXy77cuBBov/tqkqcZAgBjucr0q2Jfapz4pUtXfr3wF5JcuX4QAbAs
        90tyVuNELx2p8tsD5bUFAFiYGyZ5dePELh1Lr0vyN+sHFwC7qbwITPmZbn0ylw5S+dHRQ+sHGQC7o7we
        f3nFvvoELs1R+Y5S+Q0SAHbIHfysXx0qvzZYXikSgB1Q/mLcNxsna2kTnT/9OikAW1J+ve+Mxgla6tFL
        /LogQH/XSPLmxklZ6tlbpxeYAqCD70jyvsbJWNpG705yUv0gBWBe35nk/zZOwtI2+3CSm9QPVgDmUf5k
        79mNk6+0C30qyXfVD1oADudWSf5f46Qr7VJlBNy4fvACcDA3m06s9clW2sX+xF8VBDi8ayX5QOMkK+1y
        70hytfrBDMDRKb9jXX7Nqj65Skvo95IcVz+oAVjvBY2TqrSknlk/qAE4svLyvvXJVFpaFyX58frBDUDb
        KV7bXwN1jtcIAFjv6kk+0jiJSkvuXUmOrx/sAFzCz/01ar9aP9gBWPmxxklTGqXyfIAfqh/0APuufOv/
        rMZJUxqp8hgvj3UAJs9pnCylEXt6/eAH2Fe3T3JB40Qpjdj5SW5bfxIA7KM3N06S0si9vv4kANg3922c
        HKV96EfqTwaAfXHFJO9vnBilfejMJFeoPykA9sGDGidFaZ+6T/1JATC68pXPhxonRGmfem/9iQEwuns1
        TobSPvbD9ScHwMje3jgRSvvYG+pPDoBRfU/jJCjta+Ulgm9df5IAjOhZjZOgtM89o/4kARjNCUk+3zgB
        Svtc+ZwonxsAw3pA4+QnKfnx+pMFYCSvapz4JCWvqD9ZAEZxjSRfb5z4JCXn+lPBwKju3zjpSbokrwwI
        DOm3Gic8SZf0vPqTBmDpykv/frpxwpN0SX9ef+IALN1tGic7SZftlvUnD8CSPaxxopN02X6y/uQBWLIX
        N050ki7bC+pPHoAl+9PGiU7SZftg/ckDsFRXTXJB40Qn6bKdn+Qq9ScRwBLdoXGSk3T5/Z36kwhgif55
        4wQn6fL7J/UnEcASPalxgttmX03yxQV1XuNj2PXKba4/jl2uPCbqj2GbPaH+JAJYopc2TnA9+0KSpyQ5
        ZXo+whKVPxV7/SS3T/LAaVS9NsmXGh9vr8r7fs10W8pt+tvTbVzqn7Utj43y46qnJjmn8fH27L/UNw5g
        if6gcYLrVfmVqmvVN2ggxyW5S5JfmV5Frv745+6sJE9OcuckV6pvzECuveWXrv4f9Q0CWKKPNk5wPXps
        fUMGd8Uk90zyu0kubByPg1be1hnT2y7vY588rnE8evTh+oYALFH5Fnx9gtt05YWH9tltk7wqyUWNY3O0
        lf+2XPjLyzjvs5c1js2m+1x9IwCWpnybeM6vRo+mr0w/i2b1M+33N47Rut6X5PvqN7anTt7CkwTL62bs
        23dbgMGc2Di5bbpn1zdiz105yelJvtk4VnXfmH50Up5bwCX+Y+NYbbpr1DcCYEnKV+L1iW3TlZ9Vc1nl
        tyA+2TheF/cJX/Vfrn/QOF6b7nr1jQBYkhs2Tmyb7ib1jeCvlG9nl2eY18fs7UlOqv9l/spNG8ds05XP
        HYDF2saJ07dOj+z46ff3Lz5er57+Py7fNRuPs01XPncAFutmjRPbpvvO+kZwGeXJmeXZ7eVZ/uU5AhzZ
        zRuPs01XPncAFmsbA+De9Y2gqTzRz5P9js59Go+zTWcAAIu2jQHwwvpGwCG9qPE423QGALBo2xgA5VfZ
        /PyUuZTH8NH8CuXcGQDAom1jAJR+3wupMIPyXIk3Nh5fPTIAgEXb1gAolRdvMQI4qHLxf27jcdUrAwBY
        tG0OgNLrvS4AB1B+hLStr/wvzgAAFm3bA6BUnhNQ/ixw+e2AG/u1NxrKY6I8NspjpDyJtDxm6sdR7wwA
        YNF2YQAsvXIxKi/h++Ykv5jklvVB3gG3SvLo6TaW27oLF9ClZwAAi2YAbKb3TK9Pv23/MMl7G7dPh88A
        ABbNANhsb9vShaK82uJ/b9wezdc27leA2RgAm+8LSX6wPvAbdNckf9G4HZo3AwBYNAOgT+clObU++BtQ
        XhL3W433r/kzAIBFMwD69ZdJblffATO6TZKvNN6vNpMBACyaAdC3s5Jcvb4TZlD+xPLHG+9Pm8sAABbN
        AOjf4+s7YQZParwfbTYDAFg0A6B/5UcBN6jviEM4OclXG+9Hm80AABbNANhOp9V3xCE8tvH2tfkMAGDR
        DIDt9Ef1HXEI72y8fW0+AwBYtBs1TmzafBdO37o/rPKjhPK26revzXfD+s4AWJITGyc29elH6jvjAH60
        8XbVp2vWdwbAklzBE8i21sPqO+MAfqbxdrX5vlzfEQBLVP5wTX2C0+Z7VH1HHED564P129Xme1d9RwAs
        0XMaJzhtvp+r74gDeGTj7Wrz/Xp9RwAsUXn9+PoEp833oPqOOIAHN96uNt+96jsCYIlOSHJO4ySnzfa9
        9R1xAH+38Xa12cpfdzy+viMAluqZjROdNtfZSa5Y3wkHcCV/+rd7z6jvBIAlK68H8I3GyU6b6fn1HXAI
        L2i8fW2mryf5G/UdALB0T26c8LSZfqA++Ifww423r830hPrgA4zgqkn+tHHS07y9uT7wM3hr4/1o3j6Y
        5Cr1gQcYxfckObdx8tM8lZftnePJf7XyZEAvCby5yl9wvE190AFGU76lfF7jJKjDV/5y36Y8rvH+dPi+
        Nb3kMsBeuO/0hKf6ZKiD99vTSy9vSnnbL2+8Xx28ryU5tT7QAKO7U5JPNE6KOvZeOr3ewqaV9/GyxvvX
        sffxJHesDzDAvrhukhcluahxgtT6zp/pNf+P1WlJLmjcHq2vPNZfmOQ69UEF2EflK6HXGQLH1GuSfHd9
        IDu6bZL/2rhdalce27+X5A71gQQgucX0u9Dv9BVmsz+bXlVxly4ify/JryX5WOP27nvlOzTlsfz46bEN
        wFG4xvTrZ/84yU9Pf99+H3vo9MdhlnABuWWSe0+3uf449qXyWC2P2fLYvXp9gAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAYOm+P8lTJUmL6K71SRwO6tFJvi1JWkSPqk/icFAGgCQtJwOA2RgAkrSc
        DABmYwBI0nIyAJiNASBJy8kAYDYGgCQtJwOA2RgAkrScDABmYwBI0nIyAJiNASBJy8kAYDYGgCQtJwOA
        2RgAkrScDABmYwBI0nIyAJiNASBJy8kAYDYGgCQtJwOA2RgAkrScDABmYwBI0nIyAJiNASBJy8kAYDYG
        gCQtJwOA2RgAkrScDABmYwBI0nIyAJjNHZM8RpK0iO5Qn8QBAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAANgtD03yGEnSESvnShjKnyT5tiTpiJVzJQzFAJCk9RkADMcAkKT1GQAMxwCQpPUZAAzHAJCk
        9RkADMcAkKT1GQAMxwCQpPUZAAzHAJCk9RkADMcAkKT1GQAMxwCQpPUZAAzHAJCk9RkADMcAkKT1GQAM
        xwCQpPUZAAzHAJCk9RkADMcAkKT1GQAMxwCQpPUZAAzHAJCk9RkADMcAkKT1GQAMxwCQpPUZAAzHAJCk
        9RkADMcAkKT1GQAMxwCQpPUZAAzHAJCk9RkADMcAkKT1GQAMxwCQpPUZAAzHABijbyX54qX6ZJKPTX1+
        +v++2vjvdLi+Mh3bcowvPt6fqu6Lct/U/52WlwHAcAyA3ezcJB9M8vtJnpvkCUl+NskDktwjye2T3DzJ
        dZOcUN+paxyX5DuSfHeSuya5T5KfTPK4JL+V5G1JzkpyfuN2jV75mMvHXo7BC5OcPh2bU6djVY7ZydMx
        PBblPrredJ+V+67ch+W+LPdpuW+fN93XH5ru+/p2afsZAAzHANheX0ryh0men+QXktwvySlJrl/fSVtS
        LnK3SHL/JE9N8sYkn218HEvt7CRvmD62cuzLx3qsF/ZNOWl6LJTb9ajpMVIeK+UxU38c6pMBwHAMgH79
        rySnJblnkhvVd8SClNv+oCQvmr7dXX+cu1r5sUj5qv6BSW5Yf1ALUo5/eQyVx1J5TNUfpzaTAcBwDIB+
        /dP64A/itkn+TZK3Jrmw8XFvqwuSvCXJz0/fuh9ReUzVH7c2kwHAcAyAfo06AC6tfGX9yC0/rj6S5IlJ
        blbfuAEZAP0yABjONk/U+9Y+DIBLu3OS30zy9caxmLvyPv5zkjvVN2JwBkC/DACGYwD0a98GwMXKs+af
        vKEnsJVfs3vS9KS5fWQA9MsAYDgGQL/2dQBc7DpJnjbTdwTOm54Zv68X/osZAP0yABiOAdCvfR8AFysj
        oD42x1p5GxgAPTMAGI4B0C8DYOXfN47NsVbeBgZAzwwAhmMA9MsAWDEA5mMA9MsAYDgGQL8MgBUDYD4G
        QL8MAIZjAPTLAFgxAOZjAPTLAGA4BkC/DIAVA2A+BkC/DACGYwD0ywBYMQDmYwD0ywBgOAZAvwyAFQNg
        PgZAvwwAhmMA9MsAWDEA5mMA9MsAYDgGQL8MgBUDYD4GQL8MAIZjAPTLAFgxAOZjAPTLAGA4BkC/DIAV
        A2A+BkC/DACGYwD0ywBYMQDmYwD0ywBgOAZAvwyAFQNgPgZAvwwAhmMA9MsAWDEA5mMA9MsAYDgGQL8M
        gBUDYD4GQL8MAIZjAPTLAFgxAOZjAPTLAGA4BkC/DIAVA2A+BkC/DACGYwD0ywBYMQDmYwD0ywBgOAZA
        vwyAFQNgPgZAvwwAhmMA9MsAWDEA5mMA9MsAYDgGQL8MgBUDYD4GQL8MAIZjAPTLAFgxAOZjAPTLAGA4
        BkC/DIAVA2A+BkC/DACGYwD0ywBYMQDmYwD0ywBgOAZAvwyAFQNgPgZAvwwAhmMA9MsAWDEA5mMA9MsA
        YDgGQL8MgBUDYD4GQL8MAIZjAPTLAFgxAOZjAPTLAGA4BkC/DIAVA2A+BkC/DACGYwD0ywBYMQDmYwD0
        ywBgOAZAvwyAFQNgPgZAvwwAhmMA9MsAWDEA5mMA9MsAYDgGQL8MgBUDYD4GQL8MAIZjAPTLAFgxAOZj
        APTLAGA4BkC/DIAVA2A+BkC/DACGYwD0ywBYMQDmYwD0ywBgOAZAvwyAFQNgPgZAvwwAhmMA9MsAWDEA
        5mMA9MsAYDgGQL8MgBUDYD4GQL8MAIZjAPTLAFgxAOZjAPTLAGA4BkC/DIAVA2A+BkC/DACGYwD0ywBY
        MQDmYwD0ywBgOAZAvwyAFQNgPgZAvwwAhmMA9MsAWDEA5mMA9MsAYDgGQL8MgBUDYD4GQL8MAIZjAPTL
        AFgxAOZjAPTLAGA4BkC/DIAVA2A+BkC/DACGYwD0ywBYMQDmYwD0ywBgOAZAvwyAFQNgPgZAvwwAhmMA
        9MsAWDEA5mMA9MsAYDgGQL8MgBUDYD4GQL8MAIZjAPTLAFgxAOZjAPTLAGA4BkC/DIAVA2A+BkC/DACG
        YwD0ywBYMQDmYwD0ywBgOAZAvwyAFQNgPgZAvwwAhmMA9MsAWDEA5mMA9MsAYDgGQL8MgBUDYD4GQL8M
        AIZjAPTLAFgxAOZjAPTLAGA4BkC/DIAVA2A+BkC/DACGYwD0ywBYMQDmYwD0ywBgOAZAvwyAFQNgPgZA
        vwwAhmMA9MsAWDEA5mMA9MsAYDgGQL8MgBUDYD4GQL8MAIZjAPRr0wPgykmuc6lOTnLS9L+vWf/LWzTa
        ADjxUse7dOn74Lj6X56ZAdAvA4DhGAD9OpYBcEKSWyW5Z5KHJjk9ya8n+e0kb0pyZpKPJvlMki833teR
        OjfJJ5P8cZK3JfmdJM+b3seDk9w5yQ3qGzSjXR8A5WMvx+AhSR43HZszpmP1/unYlWNY36YjVe6jcl+V
        +6zcd/9tui/LfVqO+08l+fvTfV7u+6NlAPTLAGA4BkC/6gFQviq/43SBLxe0VyT539OF4qLGf9+7r0+P
        j5ckeWSSu830nYRdGQDlK/e7J/n5JC+dPtbyMdfvq3flvi+PgT+aHhPlYy0DoTxW6uNvAPTLAGA4BkC/
        yleST03yhiQfb/zzJXRhko8keUGS+0/f5j5W2xoA103yE0leOH0lvgsj6yCVx055DJXHUnlM1f9cm8kA
        YDgGgA7TBUnekeSJSU6pH1yXo+cAuEOSJyV553Rb67cjHW0GAMMxADRnH57GwE3rB9qlbHoA3HD6kUX5
        eX3930kHzQBgOAaANlH5art8m7r8mOBK1WNuEwOgPNu+fHv/jb7S14YyABiOAaBN97EkP5vkqtNjbs4B
        UN7mI5Kc1fh3pDkzABiOAaBefTrJw5I8o/HPjrWnJ3lAkj9v/DNpExkADMcAUO/Ob/x/x9ocb0M6lgwA
        hmMASNL6DACGYwBI0voMAIZjAEjS+gwAhmMASNL6DACGYwBI0voMAIZjAEjS+gwAhmMASNL6DACGYwBI
        0voMAIZjAEjS+gwAhmMASNL6DACGYwBI0voMAIZjAEjS+gwAhmMASNL6DACGYwBI0voMAIZjAEjS+gwA
        hmMASNL6DACGYwBI0voMAIZjAEjS+gwAhmMASNL6DACGYwBI0voMAIZjAEjS+gwAhmMASNL6DACGYwBI
        0voMAIZjAEjS+gwAhmMASNL6DACGYwBI0voMAIZjAEjS+gwAhmMASNL6DACGYwBI0voMAIZjAEjS+gwA
        hmMASNL6DACG8/wkb5EkHbFyrgQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAIB5/X8lVDHBN26/wgAAAABJRU5ErkJggg==
</value>
  </data>
</root>